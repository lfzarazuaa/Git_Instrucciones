Creando un nuevo repositorio
$ git // Muestra comandos de git.

$ git init //inicia un repositorio.

$ git status //muestra el estado actual del repositorio si hace falta actualizar o agregar archivos por comando.

$ git add texto.txt//git add <nombre.extension>

$ git commit -m "descripcion"// Crea un registro de cambios en el repositorio.

$ git branch <nombre>// Crear nuevo espacio para versión.

$ git branch //Lista los nombres de las versiones (con asterisco la seleccionada).

$ git branch --all//Lista los nombres de las versiones incluidas las online con remote.

$ git checkout -b <nombreDeLaVersion> // Crea el nuevo espacio de la versión y la selecciona.

$ git checkout <rama> //Selecciona la rama.

$ git checkout <hashidentificador> //Selecciona el commit.

$ git branch <nombreDeLaVersion> -D//Eliminar la version.

$ git add . //Agrega todos los archivos faltantes.

$ git commit -m "descripcion" // Guardar la nueva version en el repositorio.

$ git log //Muestra todos las actualizaciones ocurridas o comiits.

$ git diff <etiquetaA> <etiquetaB> //nos dice las diferencias entre las 2 versiones.

$ git diff HEAD~<#> //Diferencias entre el seleccionado y el numero de version anterior (1 es una versión anterior ,2 son versiones, asi consecutivamente).

$ git lodag//Git log --oneline --decorate --all --graph

$ git config --global alias.<nombre> 'comando sin git'//git config --global alias.<nombre> 'log --oneline --decorate --all --graph'

$ git remote //Lista los nombres de los remotos.

$ git remote -v //Lista los nombres de los remotos con su url.

$ git remote add <nombre> <url>//Crea el remoto para conectarse con el repositorio online.

$ git push <nombre> <rama>//Actualiza la rama del repositorio online.

$ git push <nombre> --all//Actualiza todas las ramas del repositorio online.
 
$ git clone <url>//Descarga todo el repositorio con veriones anteriores.

$ git pull <nombre> <rama>//Actualiza el repositorio en la pc a como esta el repositorio online.

$ git pull <nombre> --all//Actualiza todo el repositorio en la pc a como esta el repositorio online.

$ git pull --rebase <nombre> <rama>//Ordena los commit por tiempo y luego hace el merge del pull.

$ git fetch <nombre>//Descarga los objetos y referencias desde el repositorio online (pull usa este comando como primera cuenta y luego un merge).

$ git merge <rama>//Fusiona la rama que se dice con la que se tiene seleccionada y guarda los cambios en que se tiene seleccionada, puede ser Fast-forward o recursiva (en esta se tienen que eliminar manualmente los conflictos de interferencia).


